<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="AquaponicsPhysioTestDataSet" targetNamespace="http://tempuri.org/AquaponicsPhysioTestDataSet.xsd" xmlns:mstns="http://tempuri.org/AquaponicsPhysioTestDataSet.xsd" xmlns="http://tempuri.org/AquaponicsPhysioTestDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="AquaponicsPhysioTestConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="AquaponicsPhysioTestConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.AquaponicsMonitoringApp.Properties.Settings.GlobalReference.Default.AquaponicsPhysioTestConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="tblContactTableAdapter" GeneratorDataComponentClassName="tblContactTableAdapter" Name="tblContact" UserDataComponentName="tblContactTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AquaponicsPhysioTestConnectionString (Settings)" DbObjectName="AquaponicsPhysioTest.dbo.tblContact" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tblContact] WHERE (([ContactID] = @Original_ContactID) AND ((@IsNull_SensorID = 1 AND [SensorID] IS NULL) OR ([SensorID] = @Original_SensorID)) AND ((@IsNull_Email = 1 AND [Email] IS NULL) OR ([Email] = @Original_Email)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ContactID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContactID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SensorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SensorID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SensorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SensorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Email" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tblContact] ([SensorID], [Email]) VALUES (@SensorID, @Email);
SELECT ContactID, SensorID, Email FROM tblContact WHERE (ContactID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SensorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SensorID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ContactID, SensorID, Email FROM dbo.tblContact</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tblContact] SET [SensorID] = @SensorID, [Email] = @Email WHERE (([ContactID] = @Original_ContactID) AND ((@IsNull_SensorID = 1 AND [SensorID] IS NULL) OR ([SensorID] = @Original_SensorID)) AND ((@IsNull_Email = 1 AND [Email] IS NULL) OR ([Email] = @Original_Email)));
SELECT ContactID, SensorID, Email FROM tblContact WHERE (ContactID = @ContactID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SensorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SensorID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ContactID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContactID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SensorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SensorID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SensorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SensorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Email" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ContactID" ColumnName="ContactID" DataSourceName="AquaponicsPhysioTest.dbo.tblContact" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ContactID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ContactID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ContactID" DataSetColumn="ContactID" />
              <Mapping SourceColumn="SensorID" DataSetColumn="SensorID" />
              <Mapping SourceColumn="Email" DataSetColumn="Email" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="tblNotificationTableAdapter" GeneratorDataComponentClassName="tblNotificationTableAdapter" Name="tblNotification" UserDataComponentName="tblNotificationTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AquaponicsPhysioTestConnectionString (Settings)" DbObjectName="AquaponicsPhysioTest.dbo.tblNotification" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tblNotification] WHERE (([NotifyID] = @Original_NotifyID) AND ((@IsNull_SensorID = 1 AND [SensorID] IS NULL) OR ([SensorID] = @Original_SensorID)) AND ([BottomValue] = @Original_BottomValue) AND ([TopValue] = @Original_TopValue))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_NotifyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NotifyID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SensorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SensorID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SensorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SensorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BottomValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BottomValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TopValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TopValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tblNotification] ([SensorID], [BottomValue], [TopValue]) VALUES (@SensorID, @BottomValue, @TopValue);
SELECT NotifyID, SensorID, BottomValue, TopValue FROM tblNotification WHERE (NotifyID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SensorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SensorID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BottomValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BottomValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TopValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TopValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT NotifyID, SensorID, BottomValue, TopValue FROM dbo.tblNotification</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tblNotification] SET [SensorID] = @SensorID, [BottomValue] = @BottomValue, [TopValue] = @TopValue WHERE (([NotifyID] = @Original_NotifyID) AND ((@IsNull_SensorID = 1 AND [SensorID] IS NULL) OR ([SensorID] = @Original_SensorID)) AND ([BottomValue] = @Original_BottomValue) AND ([TopValue] = @Original_TopValue));
SELECT NotifyID, SensorID, BottomValue, TopValue FROM tblNotification WHERE (NotifyID = @NotifyID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SensorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SensorID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BottomValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BottomValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TopValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TopValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_NotifyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NotifyID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SensorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SensorID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SensorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SensorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BottomValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BottomValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TopValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TopValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="NotifyID" ColumnName="NotifyID" DataSourceName="AquaponicsPhysioTest.dbo.tblNotification" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@NotifyID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="NotifyID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="NotifyID" DataSetColumn="NotifyID" />
              <Mapping SourceColumn="SensorID" DataSetColumn="SensorID" />
              <Mapping SourceColumn="BottomValue" DataSetColumn="BottomValue" />
              <Mapping SourceColumn="TopValue" DataSetColumn="TopValue" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="tblSensorTableAdapter" GeneratorDataComponentClassName="tblSensorTableAdapter" Name="tblSensor" UserDataComponentName="tblSensorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AquaponicsPhysioTestConnectionString (Settings)" DbObjectName="AquaponicsPhysioTest.dbo.tblSensor" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tblSensor] WHERE (([SensorID] = @Original_SensorID) AND ([SensorName] = @Original_SensorName) AND ([SensorLocation] = @Original_SensorLocation) AND ([SensorType] = @Original_SensorType))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SensorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SensorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_SensorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SensorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_SensorLocation" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SensorLocation" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_SensorType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SensorType" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tblSensor] ([SensorName], [SensorLocation], [SensorType]) VALUES (@SensorName, @SensorLocation, @SensorType);
SELECT SensorID, SensorName, SensorLocation, SensorType FROM tblSensor WHERE (SensorID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@SensorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SensorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@SensorLocation" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SensorLocation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@SensorType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SensorType" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SensorID, SensorName, SensorLocation, SensorType FROM dbo.tblSensor</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tblSensor] SET [SensorName] = @SensorName, [SensorLocation] = @SensorLocation, [SensorType] = @SensorType WHERE (([SensorID] = @Original_SensorID) AND ([SensorName] = @Original_SensorName) AND ([SensorLocation] = @Original_SensorLocation) AND ([SensorType] = @Original_SensorType));
SELECT SensorID, SensorName, SensorLocation, SensorType FROM tblSensor WHERE (SensorID = @SensorID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@SensorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SensorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@SensorLocation" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SensorLocation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@SensorType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SensorType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SensorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SensorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_SensorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SensorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_SensorLocation" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SensorLocation" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_SensorType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SensorType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="SensorID" ColumnName="SensorID" DataSourceName="AquaponicsPhysioTest.dbo.tblSensor" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@SensorID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="SensorID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SensorID" DataSetColumn="SensorID" />
              <Mapping SourceColumn="SensorName" DataSetColumn="SensorName" />
              <Mapping SourceColumn="SensorLocation" DataSetColumn="SensorLocation" />
              <Mapping SourceColumn="SensorType" DataSetColumn="SensorType" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="tblUpdateFrequencyTableAdapter" GeneratorDataComponentClassName="tblUpdateFrequencyTableAdapter" Name="tblUpdateFrequency" UserDataComponentName="tblUpdateFrequencyTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AquaponicsPhysioTestConnectionString (Settings)" DbObjectName="AquaponicsPhysioTest.dbo.tblUpdateFrequency" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tblUpdateFrequency] WHERE (([FreqID] = @Original_FreqID) AND ([FreqSetDate] = @Original_FreqSetDate) AND ([Frequency] = @Original_Frequency))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_FreqID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FreqID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_FreqSetDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="FreqSetDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Frequency" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Frequency" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tblUpdateFrequency] ([FreqSetDate], [Frequency]) VALUES (@FreqSetDate, @Frequency);
SELECT FreqID, FreqSetDate, Frequency FROM tblUpdateFrequency WHERE (FreqID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@FreqSetDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="FreqSetDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Frequency" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Frequency" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT FreqID, FreqSetDate, Frequency FROM dbo.tblUpdateFrequency</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tblUpdateFrequency] SET [FreqSetDate] = @FreqSetDate, [Frequency] = @Frequency WHERE (([FreqID] = @Original_FreqID) AND ([FreqSetDate] = @Original_FreqSetDate) AND ([Frequency] = @Original_Frequency));
SELECT FreqID, FreqSetDate, Frequency FROM tblUpdateFrequency WHERE (FreqID = @FreqID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@FreqSetDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="FreqSetDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Frequency" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Frequency" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_FreqID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FreqID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_FreqSetDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="FreqSetDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Frequency" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Frequency" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="FreqID" ColumnName="FreqID" DataSourceName="AquaponicsPhysioTest.dbo.tblUpdateFrequency" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@FreqID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="FreqID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="FreqID" DataSetColumn="FreqID" />
              <Mapping SourceColumn="FreqSetDate" DataSetColumn="FreqSetDate" />
              <Mapping SourceColumn="Frequency" DataSetColumn="Frequency" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="tblUsersTableAdapter" GeneratorDataComponentClassName="tblUsersTableAdapter" Name="tblUsers" UserDataComponentName="tblUsersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AquaponicsPhysioTestConnectionString (Settings)" DbObjectName="AquaponicsPhysioTest.dbo.tblUsers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tblUsers] WHERE (([UserID] = @Original_UserID) AND ([Username] = @Original_Username) AND ([user_Password] = @Original_user_Password))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_user_Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tblUsers] ([Username], [user_Password]) VALUES (@Username, @user_Password);
SELECT UserID, Username, user_Password FROM tblUsers WHERE (UserID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@user_Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserID, Username, user_Password FROM dbo.tblUsers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tblUsers] SET [Username] = @Username, [user_Password] = @user_Password WHERE (([UserID] = @Original_UserID) AND ([Username] = @Original_Username) AND ([user_Password] = @Original_user_Password));
SELECT UserID, Username, user_Password FROM tblUsers WHERE (UserID = @UserID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@user_Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_user_Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="UserID" ColumnName="UserID" DataSourceName="AquaponicsPhysioTest.dbo.tblUsers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserID" DataSetColumn="UserID" />
              <Mapping SourceColumn="Username" DataSetColumn="Username" />
              <Mapping SourceColumn="user_Password" DataSetColumn="user_Password" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="AquaponicsPhysioTestDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="AquaponicsPhysioTestDataSet" msprop:Generator_UserDSName="AquaponicsPhysioTestDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="tblContact" msprop:Generator_TableClassName="tblContactDataTable" msprop:Generator_TableVarName="tabletblContact" msprop:Generator_TablePropName="tblContact" msprop:Generator_RowDeletingName="tblContactRowDeleting" msprop:Generator_RowChangingName="tblContactRowChanging" msprop:Generator_RowEvHandlerName="tblContactRowChangeEventHandler" msprop:Generator_RowDeletedName="tblContactRowDeleted" msprop:Generator_UserTableName="tblContact" msprop:Generator_RowChangedName="tblContactRowChanged" msprop:Generator_RowEvArgName="tblContactRowChangeEvent" msprop:Generator_RowClassName="tblContactRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ContactID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnContactID" msprop:Generator_ColumnPropNameInRow="ContactID" msprop:Generator_ColumnPropNameInTable="ContactIDColumn" msprop:Generator_UserColumnName="ContactID" type="xs:int" />
              <xs:element name="SensorID" msprop:Generator_ColumnVarNameInTable="columnSensorID" msprop:Generator_ColumnPropNameInRow="SensorID" msprop:Generator_ColumnPropNameInTable="SensorIDColumn" msprop:Generator_UserColumnName="SensorID" type="xs:int" minOccurs="0" />
              <xs:element name="Email" msprop:Generator_ColumnVarNameInTable="columnEmail" msprop:Generator_ColumnPropNameInRow="Email" msprop:Generator_ColumnPropNameInTable="EmailColumn" msprop:Generator_UserColumnName="Email" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tblNotification" msprop:Generator_TableClassName="tblNotificationDataTable" msprop:Generator_TableVarName="tabletblNotification" msprop:Generator_TablePropName="tblNotification" msprop:Generator_RowDeletingName="tblNotificationRowDeleting" msprop:Generator_RowChangingName="tblNotificationRowChanging" msprop:Generator_RowEvHandlerName="tblNotificationRowChangeEventHandler" msprop:Generator_RowDeletedName="tblNotificationRowDeleted" msprop:Generator_UserTableName="tblNotification" msprop:Generator_RowChangedName="tblNotificationRowChanged" msprop:Generator_RowEvArgName="tblNotificationRowChangeEvent" msprop:Generator_RowClassName="tblNotificationRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="NotifyID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnNotifyID" msprop:Generator_ColumnPropNameInRow="NotifyID" msprop:Generator_ColumnPropNameInTable="NotifyIDColumn" msprop:Generator_UserColumnName="NotifyID" type="xs:int" />
              <xs:element name="SensorID" msprop:Generator_ColumnVarNameInTable="columnSensorID" msprop:Generator_ColumnPropNameInRow="SensorID" msprop:Generator_ColumnPropNameInTable="SensorIDColumn" msprop:Generator_UserColumnName="SensorID" type="xs:int" minOccurs="0" />
              <xs:element name="BottomValue" msprop:Generator_ColumnVarNameInTable="columnBottomValue" msprop:Generator_ColumnPropNameInRow="BottomValue" msprop:Generator_ColumnPropNameInTable="BottomValueColumn" msprop:Generator_UserColumnName="BottomValue" type="xs:int" />
              <xs:element name="TopValue" msprop:Generator_ColumnVarNameInTable="columnTopValue" msprop:Generator_ColumnPropNameInRow="TopValue" msprop:Generator_ColumnPropNameInTable="TopValueColumn" msprop:Generator_UserColumnName="TopValue" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tblSensor" msprop:Generator_TableClassName="tblSensorDataTable" msprop:Generator_TableVarName="tabletblSensor" msprop:Generator_TablePropName="tblSensor" msprop:Generator_RowDeletingName="tblSensorRowDeleting" msprop:Generator_RowChangingName="tblSensorRowChanging" msprop:Generator_RowEvHandlerName="tblSensorRowChangeEventHandler" msprop:Generator_RowDeletedName="tblSensorRowDeleted" msprop:Generator_UserTableName="tblSensor" msprop:Generator_RowChangedName="tblSensorRowChanged" msprop:Generator_RowEvArgName="tblSensorRowChangeEvent" msprop:Generator_RowClassName="tblSensorRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SensorID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnSensorID" msprop:Generator_ColumnPropNameInRow="SensorID" msprop:Generator_ColumnPropNameInTable="SensorIDColumn" msprop:Generator_UserColumnName="SensorID" type="xs:int" />
              <xs:element name="SensorName" msprop:Generator_ColumnVarNameInTable="columnSensorName" msprop:Generator_ColumnPropNameInRow="SensorName" msprop:Generator_ColumnPropNameInTable="SensorNameColumn" msprop:Generator_UserColumnName="SensorName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SensorLocation" msprop:Generator_ColumnVarNameInTable="columnSensorLocation" msprop:Generator_ColumnPropNameInRow="SensorLocation" msprop:Generator_ColumnPropNameInTable="SensorLocationColumn" msprop:Generator_UserColumnName="SensorLocation">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SensorType" msprop:Generator_ColumnVarNameInTable="columnSensorType" msprop:Generator_ColumnPropNameInRow="SensorType" msprop:Generator_ColumnPropNameInTable="SensorTypeColumn" msprop:Generator_UserColumnName="SensorType">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="12" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tblUpdateFrequency" msprop:Generator_TableClassName="tblUpdateFrequencyDataTable" msprop:Generator_TableVarName="tabletblUpdateFrequency" msprop:Generator_TablePropName="tblUpdateFrequency" msprop:Generator_RowDeletingName="tblUpdateFrequencyRowDeleting" msprop:Generator_RowChangingName="tblUpdateFrequencyRowChanging" msprop:Generator_RowEvHandlerName="tblUpdateFrequencyRowChangeEventHandler" msprop:Generator_RowDeletedName="tblUpdateFrequencyRowDeleted" msprop:Generator_UserTableName="tblUpdateFrequency" msprop:Generator_RowChangedName="tblUpdateFrequencyRowChanged" msprop:Generator_RowEvArgName="tblUpdateFrequencyRowChangeEvent" msprop:Generator_RowClassName="tblUpdateFrequencyRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="FreqID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnFreqID" msprop:Generator_ColumnPropNameInRow="FreqID" msprop:Generator_ColumnPropNameInTable="FreqIDColumn" msprop:Generator_UserColumnName="FreqID" type="xs:int" />
              <xs:element name="FreqSetDate" msprop:Generator_ColumnVarNameInTable="columnFreqSetDate" msprop:Generator_ColumnPropNameInRow="FreqSetDate" msprop:Generator_ColumnPropNameInTable="FreqSetDateColumn" msprop:Generator_UserColumnName="FreqSetDate" type="xs:dateTime" />
              <xs:element name="Frequency" msprop:Generator_ColumnVarNameInTable="columnFrequency" msprop:Generator_ColumnPropNameInRow="Frequency" msprop:Generator_ColumnPropNameInTable="FrequencyColumn" msprop:Generator_UserColumnName="Frequency" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tblUsers" msprop:Generator_TableClassName="tblUsersDataTable" msprop:Generator_TableVarName="tabletblUsers" msprop:Generator_TablePropName="tblUsers" msprop:Generator_RowDeletingName="tblUsersRowDeleting" msprop:Generator_RowChangingName="tblUsersRowChanging" msprop:Generator_RowEvHandlerName="tblUsersRowChangeEventHandler" msprop:Generator_RowDeletedName="tblUsersRowDeleted" msprop:Generator_UserTableName="tblUsers" msprop:Generator_RowChangedName="tblUsersRowChanged" msprop:Generator_RowEvArgName="tblUsersRowChangeEvent" msprop:Generator_RowClassName="tblUsersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnUserID" msprop:Generator_ColumnPropNameInRow="UserID" msprop:Generator_ColumnPropNameInTable="UserIDColumn" msprop:Generator_UserColumnName="UserID" type="xs:int" />
              <xs:element name="Username" msprop:Generator_ColumnVarNameInTable="columnUsername" msprop:Generator_ColumnPropNameInRow="Username" msprop:Generator_ColumnPropNameInTable="UsernameColumn" msprop:Generator_UserColumnName="Username">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="user_Password" msprop:Generator_ColumnVarNameInTable="columnuser_Password" msprop:Generator_ColumnPropNameInRow="user_Password" msprop:Generator_ColumnPropNameInTable="user_PasswordColumn" msprop:Generator_UserColumnName="user_Password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tblContact" />
      <xs:field xpath="mstns:ContactID" />
    </xs:unique>
    <xs:unique name="tblNotification_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tblNotification" />
      <xs:field xpath="mstns:NotifyID" />
    </xs:unique>
    <xs:unique name="tblSensor_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tblSensor" />
      <xs:field xpath="mstns:SensorID" />
    </xs:unique>
    <xs:unique name="tblUpdateFrequency_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tblUpdateFrequency" />
      <xs:field xpath="mstns:FreqID" />
    </xs:unique>
    <xs:unique name="tblUsers_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tblUsers" />
      <xs:field xpath="mstns:UserID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__tblContac__Senso__2A4B4B5E" msdata:parent="tblSensor" msdata:child="tblContact" msdata:parentkey="SensorID" msdata:childkey="SensorID" msprop:Generator_UserChildTable="tblContact" msprop:Generator_ChildPropName="GettblContactRows" msprop:Generator_UserRelationName="FK__tblContac__Senso__2A4B4B5E" msprop:Generator_RelationVarName="relationFK__tblContac__Senso__2A4B4B5E" msprop:Generator_UserParentTable="tblSensor" msprop:Generator_ParentPropName="tblSensorRow" />
      <msdata:Relationship name="FK__tblNotifi__Senso__276EDEB3" msdata:parent="tblSensor" msdata:child="tblNotification" msdata:parentkey="SensorID" msdata:childkey="SensorID" msprop:Generator_UserChildTable="tblNotification" msprop:Generator_ChildPropName="GettblNotificationRows" msprop:Generator_UserRelationName="FK__tblNotifi__Senso__276EDEB3" msprop:Generator_RelationVarName="relationFK__tblNotifi__Senso__276EDEB3" msprop:Generator_UserParentTable="tblSensor" msprop:Generator_ParentPropName="tblSensorRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>